
name: AWS infra

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

permissions:
  id-token: write
  contents: read


jobs:
  lint-and-security:
    name: Lint and Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install TFLint
        run: |
          wget https://github.com/terraform-linters/tflint/releases/download/v0.50.2/tflint_linux_amd64.zip
          unzip tflint_linux_amd64.zip
          sudo mv tflint /usr/local/bin/
          tflint --version

      - name: Run TFLint
        run: tflint --init && tflint -f compact
        working-directory: ./
      
      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov with soft fail
        run: checkov --directory . --soft-fail

  terraform:
    name: Terraform ${{ github.event.inputs.action }}
    runs-on: ubuntu-latest
    
    env:
      AWS_REGION: ${{ secrets.AWS_REGION || 'ap-south-1' }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::199570228070:role/oidc-demo-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Format Terraform code
        run: terraform fmt -recursive

      - name: Initialize Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate
      
      - name: Generate Markdown with Terraform Docs
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          output-file: README.md
          output-method: inject
          git-push: true
          config-file: .terraform-docs.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Posting README.md as PR Comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          header: "Terraform Documentation "
          path: "README.md"

      - name: Applying Terraform after PR Merge
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Manually Destroy Infrastructure
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
        run: |
          terraform init
          terraform destroy -auto-approve